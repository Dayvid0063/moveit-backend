// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  password      String
  firstName     String
  lastName      String
  phoneNumber   String    @unique
  role          UserRole  @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  bookings      Booking[]
}

enum UserRole {
  USER
  ADMIN
}

model CarBrand {
  id        String  @id @default(uuid())
  name      String  @unique
  image     String
  cars      Car[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Car {
  id                String    @id @default(uuid())
  name              String
  plateNumber       String    @unique
  status            CarStatus @default(AVAILABLE)
  pricePerDay       Float
  passengerCapacity Int
  description       String
  images            String[]
  features          String[]
  brandId           String
  brand             CarBrand  @relation(fields: [brandId], references: [id])
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  bookings          Booking[]
}

enum CarStatus {
  AVAILABLE
  RENTED
  MAINTENANCE
}

model Booking {
  id             String     @id @default(uuid())
  startDate      DateTime
  endDate        DateTime
  numberOfDays   Int
  totalAmount    Float
  transactionId  String?
  transactionRef String
  car            Car        @relation(fields: [carId], references: [id])
  carId          String
  user           User       @relation(fields: [userId], references: [id])
  userId         String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}
